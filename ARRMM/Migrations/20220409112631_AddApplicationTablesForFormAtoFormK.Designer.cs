// <auto-generated />
using System;
using ARRMM.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ARRMM.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20220409112631_AddApplicationTablesForFormAtoFormK")]
    partial class AddApplicationTablesForFormAtoFormK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ARRMM.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantedOrRefusedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ScaleType")
                        .HasColumnType("int");

                    b.Property<string>("SendBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SendTo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GrantedOrRefusedBy");

                    b.HasIndex("SendBy");

                    b.HasIndex("SendTo");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("ARRMM.Entities.ApplicationMineral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("MineralId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("MineralId");

                    b.ToTable("ApplicationMinerals");
                });

            modelBuilder.Entity("ARRMM.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NicNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NicNumber")
                        .IsUnique()
                        .HasFilter("[NicNumber] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ARRMM.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ARRMM.Entities.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Latitude")
                        .HasPrecision(9, 7)
                        .HasColumnType("decimal(9,7)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(9, 7)
                        .HasColumnType("decimal(9,7)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("ARRMM.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ARRMM.Entities.Exploration", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessNature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasShareCapital")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Offences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousOperationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PreviousApplicationStatusId");

                    b.HasIndex("PreviousOperationStatusId");

                    b.ToTable("Explorations");
                });

            modelBuilder.Entity("ARRMM.Entities.LandSurrenderAndTransfer", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<string>("Offences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticularDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousOperationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredMineralTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SurrenderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.HasIndex("PreviousApplicationStatusId");

                    b.HasIndex("PreviousOperationStatusId");

                    b.ToTable("LandSurrendersAndTransfers");
                });

            modelBuilder.Entity("ARRMM.Entities.LargeMiningLease", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessNature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasShareCapital")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("int");

                    b.Property<string>("Offences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousOperationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PreviousApplicationStatusId");

                    b.HasIndex("PreviousOperationStatusId");

                    b.ToTable("LargeMiningLeases");
                });

            modelBuilder.Entity("ARRMM.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ARRMM.Entities.Mineral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Minerals");
                });

            modelBuilder.Entity("ARRMM.Entities.MineralDepositRetention", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignmentDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessNature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangesDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedMiningDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasShareCapital")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Offences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousOperationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelatingCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatingPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidentialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PreviousApplicationStatusId");

                    b.HasIndex("PreviousOperationStatusId");

                    b.ToTable("MineralDepositRetentions");
                });

            modelBuilder.Entity("ARRMM.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocalDomicile")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfTribe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NicIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NicIssuePlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NicNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBusiness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SharesPercentage")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ARRMM.Entities.Prospecting", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int");

                    b.Property<string>("Authorized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChallanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GovernmentDuesDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedAndSubscribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MiningConcessionsDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfTechnicalExpert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastSubmittedApplicationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousMiningExperienceDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationOfTechnicalExpert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("LocationId");

                    b.ToTable("Prospectings");
                });

            modelBuilder.Entity("ARRMM.Entities.Reconnaissance", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessNature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasShareCapital")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("int");

                    b.Property<string>("Offences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PreviousOperationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PreviousApplicationStatusId");

                    b.HasIndex("PreviousOperationStatusId");

                    b.ToTable("Reconnaissances");
                });

            modelBuilder.Entity("ARRMM.Entities.SmallMiningLease", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("AmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicantType")
                        .HasColumnType("int");

                    b.Property<string>("Authorized")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChallanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GovernmentDuesDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedAndSubscribed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandAreaSize")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MiningConcessionsDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfTechnicalExpert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastSubmittedApplicationDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousMiningExperienceDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationOfTechnicalExpert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("LocationId");

                    b.ToTable("SmallMiningLeases");
                });

            modelBuilder.Entity("ARRMM.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ARRMM.Entities.Application", b =>
                {
                    b.HasOne("ARRMM.Entities.ApplicationUser", "GrantedOrRefusedByUser")
                        .WithMany()
                        .HasForeignKey("GrantedOrRefusedBy");

                    b.HasOne("ARRMM.Entities.ApplicationUser", "SendByUser")
                        .WithMany()
                        .HasForeignKey("SendBy");

                    b.HasOne("ARRMM.Entities.ApplicationUser", "SendToUser")
                        .WithMany()
                        .HasForeignKey("SendTo");

                    b.HasOne("ARRMM.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("GrantedOrRefusedByUser");

                    b.Navigation("SendByUser");

                    b.Navigation("SendToUser");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ARRMM.Entities.ApplicationMineral", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithMany("Minerals")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Mineral", "Mineral")
                        .WithMany()
                        .HasForeignKey("MineralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Mineral");
                });

            modelBuilder.Entity("ARRMM.Entities.Coordinate", b =>
                {
                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany("Coordinates")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ARRMM.Entities.Exploration", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("Exploration")
                        .HasForeignKey("ARRMM.Entities.Exploration", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousApplicionStatus")
                        .WithMany()
                        .HasForeignKey("PreviousApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousOperationStatus")
                        .WithMany()
                        .HasForeignKey("PreviousOperationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Country");

                    b.Navigation("Location");

                    b.Navigation("PreviousApplicionStatus");

                    b.Navigation("PreviousOperationStatus");
                });

            modelBuilder.Entity("ARRMM.Entities.LandSurrenderAndTransfer", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("LandSurrenderAndTransfer")
                        .HasForeignKey("ARRMM.Entities.LandSurrenderAndTransfer", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousApplicionStatus")
                        .WithMany()
                        .HasForeignKey("PreviousApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousOperationStatus")
                        .WithMany()
                        .HasForeignKey("PreviousOperationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("PreviousApplicionStatus");

                    b.Navigation("PreviousOperationStatus");
                });

            modelBuilder.Entity("ARRMM.Entities.LargeMiningLease", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("LargeMiningLease")
                        .HasForeignKey("ARRMM.Entities.LargeMiningLease", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousApplicionStatus")
                        .WithMany()
                        .HasForeignKey("PreviousApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousOperationStatus")
                        .WithMany()
                        .HasForeignKey("PreviousOperationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Location");

                    b.Navigation("PreviousApplicionStatus");

                    b.Navigation("PreviousOperationStatus");
                });

            modelBuilder.Entity("ARRMM.Entities.MineralDepositRetention", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("MineralDepositRetention")
                        .HasForeignKey("ARRMM.Entities.MineralDepositRetention", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousApplicionStatus")
                        .WithMany()
                        .HasForeignKey("PreviousApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousOperationStatus")
                        .WithMany()
                        .HasForeignKey("PreviousOperationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Country");

                    b.Navigation("Location");

                    b.Navigation("PreviousApplicionStatus");

                    b.Navigation("PreviousOperationStatus");
                });

            modelBuilder.Entity("ARRMM.Entities.Person", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithMany("Persons")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Company", "Company")
                        .WithMany("Persons")
                        .HasForeignKey("CompanyId");

                    b.HasOne("ARRMM.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Application");

                    b.Navigation("Company");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ARRMM.Entities.Prospecting", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("Prospecting")
                        .HasForeignKey("ARRMM.Entities.Prospecting", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ARRMM.Entities.Reconnaissance", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("Reconnaissance")
                        .HasForeignKey("ARRMM.Entities.Reconnaissance", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousApplicionStatus")
                        .WithMany()
                        .HasForeignKey("PreviousApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Status", "PreviousOperationStatus")
                        .WithMany()
                        .HasForeignKey("PreviousOperationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Location");

                    b.Navigation("PreviousApplicionStatus");

                    b.Navigation("PreviousOperationStatus");
                });

            modelBuilder.Entity("ARRMM.Entities.SmallMiningLease", b =>
                {
                    b.HasOne("ARRMM.Entities.Application", "Application")
                        .WithOne("SmallMiningLease")
                        .HasForeignKey("ARRMM.Entities.SmallMiningLease", "ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ARRMM.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ARRMM.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ARRMM.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ARRMM.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ARRMM.Entities.Application", b =>
                {
                    b.Navigation("Exploration");

                    b.Navigation("LandSurrenderAndTransfer");

                    b.Navigation("LargeMiningLease");

                    b.Navigation("MineralDepositRetention");

                    b.Navigation("Minerals");

                    b.Navigation("Persons");

                    b.Navigation("Prospecting");

                    b.Navigation("Reconnaissance");

                    b.Navigation("SmallMiningLease");
                });

            modelBuilder.Entity("ARRMM.Entities.Company", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("ARRMM.Entities.Location", b =>
                {
                    b.Navigation("Coordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
